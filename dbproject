-- Project SQL 

-- ########### if table exists ###########
DROP TABLE IF EXISTS Alerts;
DROP TABLE IF EXISTS OverdueBooks;
DROP TABLE IF EXISTS Reservations;
DROP TABLE IF EXISTS Checkouts;
DROP TABLE IF EXISTS AlertType;
DROP TABLE IF EXISTS AlertStatus;
DROP TABLE IF EXISTS OverdueStatus; 
DROP TABLE IF EXISTS ReservationStatus; 
DROP TABLE IF EXISTS CheckoutStatus;
DROP TABLE IF EXISTS Books; 
DROP TABLE IF EXISTS Patrons; 
DROP TABLE IF EXISTS Staff; 
DROP TABLE IF EXISTS Authentication; 
DROP TABLE IF EXISTS BookStatus; 
DROP TABLE IF EXISTS Publishers; 
DROP TABLE IF EXISTS Authors; 
DROP TABLE IF EXISTS BookGenre; 
DROP TABLE IF EXISTS BookAge; 
DROP TABLE IF EXISTS BookCategory; 


-- ########### table creations ###########

CREATE TABLE BookCategory (
	category_id INT AUTO_INCREMENT PRIMARY KEY, 
	category_name VARCHAR(15) NOT NULL UNIQUE
);


CREATE TABLE BookAge (
	age_id INT AUTO_INCREMENT PRIMARY KEY, 
	age_group VARCHAR(20) NOT NULL,
	age_range VARCHAR(20) NOT NULL
);  


CREATE TABLE BookGenre (
	genre_id INT AUTO_INCREMENT PRIMARY KEY, 
	genre_name VARCHAR(20) NOT NULL
); 	


CREATE TABLE Authors (
	author_id INT AUTO_INCREMENT PRIMARY KEY,
	first_name_a VARCHAR(30) NOT NULL,
	last_name_a VARCHAR(30) NOT NULL
); 


CREATE TABLE Publishers (
	publisher_id INT AUTO_INCREMENT PRIMARY KEY,
	publisher_name VARCHAR(50) NOT NULL,
	publisher_phone_num VARCHAR(15) NOT NULL, 
	publisher_email VARCHAR(50) NOT NULL
); 


CREATE TABLE BookStatus (
	book_status_id INT AUTO_INCREMENT PRIMARY KEY,
	book_status_name VARCHAR(20) NOT NULL
);


CREATE TABLE Authentication (
	login_id VARCHAR(10) PRIMARY KEY,
	pin VARCHAR(20) NOT NULL
); 


CREATE TABLE Staff (
	staff_id INT AUTO_INCREMENT PRIMARY KEY,
	first_name_s VARCHAR(20) NOT NULL, 
	last_name_s VARCHAR(20) NOT NULL,
	login_id_s VARCHAR(10) NOT NULL,
	email_s VARCHAR(30) NOT NULL,
	phone_num_s VARCHAR(15) NOT NULL,
	FOREIGN KEY (login_id_s) REFERENCES authentication(login_id) ON DELETE CASCADE
); 


CREATE TABLE Patrons (
	user_id INT AUTO_INCREMENT PRIMARY KEY,
	first_name_p VARCHAR(20) NOT NULL,
	last_name_p VARCHAR(20) NOT NULL,
	login_id_p VARCHAR(10) NOT NULL, 
	email_p VARCHAR(30) NOT NULL, 
	address_p VARCHAR(30),
	phone_num_p VARCHAR(15), 
	FOREIGN KEY (login_id_p) REFERENCES Authentication(login_id) ON DELETE CASCADE
); 



CREATE TABLE Books (
	book_id INT AUTO_INCREMENT PRIMARY KEY, 
	ISBN VARCHAR(15) NOT NULL, 
    book_title VARCHAR(50) NOT NULL,
	category_id INT NOT NULL, 
	age_id INT NOT NULL, 
	genre_id INT NOT NULL, 
	author_id INT NOT NULL, 
	publisher_id INT NOT NULL, 
	year_published INT NOT NULL, 
	book_status_id INT NOT NULL, 
	copy_num INT NOT NULL,  
	FOREIGN KEY (category_id) REFERENCES BookCategory(category_id),
	FOREIGN KEY (age_id) REFERENCES BookAge(age_id),
	FOREIGN KEY (genre_id) REFERENCES BookGenre(genre_id),
	FOREIGN KEY (publisher_id) REFERENCES Publishers(publisher_id),
	FOREIGN KEY (book_status_id) REFERENCES BookStatus(book_status_id)
); 

CREATE TABLE CheckoutStatus (
	checkout_status_id INT AUTO_INCREMENT PRIMARY KEY,
    checkout_status VARCHAR(20) NOT NULL
);

CREATE TABLE ReservationStatus (
	reservation_status_id INT AUTO_INCREMENT PRIMARY KEY,
    reservation_status VARCHAR(20) NOT NULL
);

CREATE TABLE OverdueStatus (
	overdue_status_id INT AUTO_INCREMENT PRIMARY KEY,
    overdue_status VARCHAR(20) NOT NULL
);

CREATE TABLE AlertStatus (
	alert_status_id INT AUTO_INCREMENT PRIMARY KEY,
    alert_status VARCHAR(20) NOT NULL
);

CREATE TABLE AlertType (
	alert_type_id INT AUTO_INCREMENT PRIMARY KEY,
    alert_message VARCHAR(100) NOT NULL
);


CREATE TABLE Checkouts (
	checkout_id INT AUTO_INCREMENT PRIMARY KEY, 
    book_id INT NOT NULL, 
    user_id INT NOT NULL, 
    checkout_date DATE NOT NULL, 
    due_date DATE NOT NULL, 
    checkout_status_id INT NOT NULL, 
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (user_id) REFERENCES Patrons(user_id) ON DELETE CASCADE,
    FOREIGN KEY (checkout_status_id) REFERENCES CheckoutStatus(checkout_status_id)
);

CREATE TABLE Reservations (
	reservation_id INT AUTO_INCREMENT PRIMARY KEY, 
    book_id INT NOT NULL, 
    user_id INT NOT NULL,  
    reservation_status_id INT NOT NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (user_id) REFERENCES Patrons(user_id) ON DELETE CASCADE,
    FOREIGN KEY (reservation_status_id) REFERENCES ReservationStatus(reservation_status_id)
);

CREATE TABLE OverdueBooks (
	overdue_id INT AUTO_INCREMENT PRIMARY KEY, 
    book_id INT NOT NULL, 
    user_id INT NOT NULL,  
    days_overdue INT NOT NULL,
    overdue_status_id INT NOT NULL,
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (user_id) REFERENCES Patrons(user_id) ON DELETE CASCADE,
    FOREIGN KEY (overdue_status_id) REFERENCES OverdueStatus(overdue_status_id)
);

CREATE TABLE Alerts (
	alert_id INT AUTO_INCREMENT PRIMARY KEY, 
    book_id INT NOT NULL, 
    user_id INT NOT NULL,  
    date_time DATE NOT NULL, 
    alert_type_id INT NOT NULL, 
    alert_status_id INT NOT NULL, 
    FOREIGN KEY (book_id) REFERENCES Books(book_id),
    FOREIGN KEY (user_id) REFERENCES Patrons(user_id) ON DELETE CASCADE,
    FOREIGN KEY (alert_type_id) REFERENCES AlertType(alert_type_id),
    FOREIGN KEY (alert_status_id) REFERENCES AlertStatus(alert_status_id)
);

-- ########## data insertion ###########
-- populate tables in same order as table creations 

INSERT INTO BookCategory(category_name) VALUES 
	('fiction'), 
	('non-fiction');

INSERT INTO BookAge(age_group, age_range) VALUES 
	('Kids', '1-9'),
    ('Preteen', '10-12'),
    ('YA', '13-18'),
    ('Adult', '18+');

INSERT INTO BookGenre(genre_name) VALUES 
	('Mystery'), 
	('Romance'), 
	('Fantasy'), 
	('Sci-fi'), 
	('Thriller'),
	('Horror');

INSERT INTO BookStatus(book_status_name) VALUES 
	('on_shelf'),
	('checked_out'),
	('returned_pile'),
	('reserved');

INSERT INTO Authors(first_name_a, last_name_a) VALUES 
    ('Rick', 'Riordan'),
    ('Louis', 'Sachar'),
    ('R.J.', 'Palacio'),
    ('J.K.', 'Rowling'),
    ('J.R.R.', 'Tolkien'),
    ('Wendelin', 'Van Draanen'),
    ('Roald', 'Dahl'),
    ('Eoin', 'Colfer'),
    ('Katherine', 'Paterson'),
    ('Veronica', 'Roth'),
    ('Suzanne', 'Collins'),
    ('Stephenie', 'Meyer'),
    ('Cassandra', 'Clare'),
    ('Marie', 'Lu'),
    ('Sarah J.', 'Maas'),
    ('Carolyn', 'Keene'),
    ('Nicola', 'Yoon'),
    ('Lois', 'Lowry'),
    ('Madeline', 'Miller'),
    ('Ali', 'Hazelwood'),
    ('Delia', 'Owens'),
    ('Jojo', 'Moyes'),
    ('Freida', 'McFadden'),
    ('Stieg', 'Larsson'),
    ('Stephen', 'King'),
    ('Fonda', 'Lee'),
    ('Chinua', 'Achebe'),
    ('Fyodor', 'Dostoevsky');

INSERT INTO Publishers(publisher_name, publisher_phone_num, publisher_email) VALUES
    ('Disney-Hyperion', '555-123-4567', 'contact@disneyhyperion.com'),
    ('Penguin Random House', '555-234-5678', 'info@penguinrandomhouse.com'),
    ('Scholastic', '555-345-6789', 'support@scholastic.com'),
    ('Delacorte Press', '555-456-7890', 'info@delacortepress.com'),
    ('Bookouture', '555-567-8901', 'contact@bookouture.com'),
    ('Simon & Schuster', '555-678-9012', 'info@simonandschuster.com');


INSERT INTO Books(ISBN, book_title, category_id, age_id, genre_id, author_id, publisher_id, year_published, book_status_id, copy_num) VALUES
    ('9780786838653', 'The Lightning Thief', 1, 3, 3, 1, 1, 2005, 1, 1),
    ('9780440414803', 'Holes', 1, 4, 3, 2, 2, 1998, 1, 1),
    ('9780375869020', 'Wonder', 1, 1, 2, 3, 2, 2012, 1, 1),
    ('9780747532699', 'Harry Potter and the Philosopher''s Stone', 1, 3, 3, 4, 3, 1997, 1, 1),
    ('9781423103349', 'The Sea of Monsters', 1, 3, 3, 1, 1, 2006, 1, 1),
    ('9780345339683', 'The Hobbit', 2, 4, 3, 5, 2, 1937, 1, 1),
    ('9780375825446', 'Flipped', 1, 2, 2, 6, 2, 2001, 1, 1),
    ('9780142410370', 'Matilda', 1, 1, 3, 7, 3, 1988, 1, 1),
    ('9780141339092', 'Artemis Fowl', 1, 3, 3, 8, 3, 2001, 1, 1),
    ('9780060734015', 'Bridge to Terabithia', 1, 1, 3, 9, 4, 1977, 1, 1),
    ('9780062024039', 'Divergent', 1, 3, 4, 10, 4, 2011, 1, 1),
    ('9780439023481', 'The Hunger Games', 1, 3, 4, 11, 3, 2008, 1, 1),
    ('9780316015844', 'Twilight', 1, 4, 2, 12, 5, 2005, 1, 1),
    ('9781416955078', 'City of Bones', 1, 3, 3, 13, 6, 2007, 1, 1),
    ('9780439023498', 'Catching Fire', 1, 3, 4, 11, 3, 2009, 1, 1),
    ('9780399256752', 'Legend', 1, 3, 4, 14, 2, 2011, 1, 1),
    ('9781619630345', 'Throne of Glass', 1, 3, 3, 15, 3, 2012, 1, 1),
    ('9780448095022', 'The Hidden Staircase', 1, 1, 1, 16, 6, 1930, 1, 1),
    ('9780553496673', 'Everything, Everything', 1, 4, 2, 17, 4, 2015, 1, 1),
    ('9780544336261', 'The Giver', 1, 3, 3, 18, 3, 1993, 1, 1),
    ('9780316556347', 'Circe', 2, 4, 3, 19, 6, 2018, 1, 1),
    ('9780593336823', 'The Love Hypothesis', 2, 4, 2, 20, 5, 2021, 1, 1),
    ('9780735219090', 'Where the Crawdads Sing', 2, 4, 3, 21, 2, 2018, 1, 1),
    ('9780143124542', 'Me Before You', 2, 4, 2, 22, 2, 2012, 1, 1),
    ('9781536472662', 'The Housemaid', 2, 4, 5, 23, 5, 2022, 1, 1),
    ('9780307949486', 'The Girl with the Dragon Tattoo', 2, 4, 1, 24, 2, 2005, 1, 1),
    ('9780307743657', 'The Shining', 2, 4, 6, 25, 6, 1977, 1, 1),
    ('9780316440882', 'Jade City', 2, 4, 3, 26, 1, 2017, 1, 1),
    ('9780385474542', 'Things Fall Apart', 2, 4, 1, 27, 3, 1958, 1, 1),
    ('9780140449136', 'Crime and Punishment', 2, 4, 1, 28, 3, 1866, 1, 1);


INSERT INTO Authentication(login_id, pin) VALUES
  -- Patrons
	('L1000001', '1234'),
    ('L1000002', '2345'),
    ('L1000003', '3456'),
    ('L1000004', '4567'),
    ('L1000005', '5678'),
    ('L1000006', '6789'),
    ('L1000007', '7890'),
    ('L1000008', '8901'),
    ('L1000009', '9012'),
    ('L1000010', '0123'),
    ('L1000011', '1111'),
    ('L1000012', '2222'),
    ('L1000013', '3333'),
    ('L1000014', '4444'),
    ('L1000015', '5555'),
    ('L1000016', '6666'),
    ('L1000017', '7777'),
    ('L1000018', '8888'),
    ('L1000019', '9999'),
    ('L1000020', '0000'),
  -- Staff
	('S10001', '4321'),
    ('S10002', '5432'),
    ('S10003', '6543'),
    ('S10004', '7654'),
    ('S10005', '8765');


INSERT INTO Staff(first_name_s, last_name_s, login_id_s, email_s, phone_num_s) VALUES
    ('John', 'Doe', 'S10001', 'jdoe@example.com', '123-456-7890'),
    ('Jane', 'Smith', 'S10002', 'jsmith@example.com', '234-567-8901'),
    ('Emily', 'Johnson', 'S10003', 'ejohnson@example.com', '345-678-9012'),
    ('Michael', 'Williams', 'S10004', 'mwilliams@example.com', '456-789-0123'),
    ('Sarah', 'Brown', 'S10005', 'sbrown@example.com', '567-890-1234');


INSERT INTO Patrons(first_name_p, last_name_p, login_id_p, email_p, address_p, phone_num_p) VALUES
('Alice', 'Walker', 'L1000001', 'alice.walker@example.com', '123 Maple St, Springfield', '555-123-4567'),
('Bob', 'Martin', 'L1000002', 'bob.martin@example.com', '456 Oak St, Rivertown', '555-234-5678'),
('Carol', 'Davis', 'L1000003', 'carol.davis@example.com', '789 Pine St, Laketown', '555-345-6789'),
('David', 'Brown', 'L1000004', 'david.brown@example.com', '101 Elm St, Hillcrest', '555-456-7890'),
('Eve', 'Wilson', 'L1000005', 'eve.wilson@example.com', '202 Cedar St, Greenfield', '555-567-8901'),
('Frank', 'Taylor', 'L1000006', 'frank.taylor@example.com', '303 Birch St, Woodside', '555-678-9012'),
('Grace', 'Moore', 'L1000007', 'grace.moore@example.com', '404 Willow St, Brightville', '555-789-0123'),
('Henry', 'Lee', 'L1000008', 'henry.lee@example.com', '505 Cherry St, Lakeside', '555-890-1234'),
('Ivy', 'Harris', 'L1000009', 'ivy.harris@example.com', '606 Maple Ave, Crestwood', '555-901-2345'),
('Jack', 'Clark', 'L1000010', 'jack.clark@example.com', '707 Pine Ave, Riverton', '555-012-3456'),
('Kelly', 'Lewis', 'L1000011', 'kelly.lewis@example.com', '808 Oak Ave, Westfield', '555-123-4567'),
('Liam', 'Walker', 'L1000012', 'liam.walker@example.com', '909 Cedar Ave, Kingsport', '555-234-5678'),
('Mona', 'Young', 'L1000013', 'mona.young@example.com', '1010 Elm Ave, Maplewood', '555-345-6789'),
('Nancy', 'King', 'L1000014', 'nancy.king@example.com', '1111 Birch Ave, Greendale', '555-456-7890'),
('Oscar', 'Scott', 'L1000015', 'oscar.scott@example.com', '1212 Willow Ave, Springhill', '555-567-8901');


INSERT INTO AlertType(alert_message) VALUES 
	('Reservation is ready for pick-up!'),
    ('Reminder: Book is due in 2 days.'),
    ('Reminder: Book is due tomorrow.'),
    ('Reminder: Your book is overdue, please return it asap. Thanks.');

INSERT INTO AlertStatus(alert_status) VALUES
	('inactive'),
    ('active');

INSERT INTO OverdueStatus(overdue_status) VALUES
	('inactive'),
    ('active');

INSERT INTO ReservationStatus(reservation_status) VALUES
	('inactive'),
    ('reservation placed'),
    ('ready for pickup');
    
INSERT INTO CheckoutStatus(checkout_status) VALUES
	('inactive'),
    ('active');



